参考地址：https://www.elastic.co/guide/cn/elasticsearch/guide/current/_finding_your_feet.html

一、创建一个雇员目录

1.一个 Elasticsearch 集群可以 包含多个 索引 ，相应的每个索引可以包含多个 类型 。 这些不同的类型存储着多个 文档 ，每个文档又有 多个 属性 。
                                文档    属性 属性
                          类型  文档    属性 属性    
                    索引  类型  文档    属性 属性 
                                文档    属性 属性    
Elasticsearch集群   索引  类型  文档    属性 属性 
                                文档    属性 属性    
                    索引  类型  文档    属性 属性   
                          类型  文档    属性 属性
                                文档    属性 属性 

2.对于员工目录，我们将做如下操作：
    我们的 Elasticse 中保存索引 megacorp 
    索引里面有 每个文档 employee 类型 。
    文档包含该员工的所有信息 属性
                
                  PUT /megacorp/employee/1
                       索引名称 类型名称 特定雇员的ID
                   
路径 /megacorp/employee/1 包含了三部分的信息：
megacorp
    索引名称
employee
    类型名称
1
    特定雇员的ID     
    
3.添加内容：
curl -X PUT "172.16.70.124:9200/megacorp/employee/1?pretty" -H 'Content-Type: application/json' -d'
{
    "first_name" : "John",
    "last_name" :  "Smith",
    "age" :        25,
    "about" :      "I love to go rock climbing",
    "interests": [ "sports", "music" ]
}
'
返回结果：
{
  "_index" : "megacorp",
  "_type" : "employee",
  "_id" : "1",
  "_version" : 1,
  "created" : true
}

curl -X PUT "172.16.70.124:9200/megacorp/employee/2?pretty" -H 'Content-Type: application/json' -d'
{
    "first_name" :  "Jane",
    "last_name" :   "Smith",
    "age" :         32,
    "about" :       "I like to collect rock albums",
    "interests":  [ "music" ]
}
'
返回结果：
{
  "_index" : "megacorp",
  "_type" : "employee",
  "_id" : "2",
  "_version" : 1,
  "created" : true
}

curl -X PUT "172.16.70.124:9200/megacorp/employee/3?pretty" -H 'Content-Type: application/json' -d'
{
    "first_name" :  "Douglas",
    "last_name" :   "Fir",
    "age" :         35,
    "about":        "I like to build cabinets",
    "interests":  [ "forestry" ]
}
'
返回结果：
{
  "_index" : "megacorp",
  "_type" : "employee",
  "_id" : "3",
  "_version" : 1,
  "created" : true
}

    
二、检索文档
1.需求是可以检索到单个雇员的数据
执行 一个 HTTP GET 请求并指定文档的地址——索引库、类型和ID。 使用这三个信息可以返回原始的 JSON 文档：
curl -X GET "172.16.70.124:9200/megacorp/employee/1?pretty"
返回结果：
{
  "_index" : "megacorp",
  "_type" : "employee",
  "_id" : "1",
  "_version" : 1,
  "found" : true,
  "_source":
{
    "first_name" : "John",
    "last_name" :  "Smith",
    "age" :        25,
    "about" :      "I love to go rock climbing",
    "interests": [ "sports", "music" ]
}
}

将 HTTP 命令由 PUT 改为 GET 可以用来检索文档，同样的，可以使用 DELETE 命令来删除文档，以及使用 HEAD 指令来检查文档是否存在。如果想更新已存在的文档，只需再次 PUT 。



